[{"/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/index.js":"1","/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/reportWebVitals.js":"2","/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/App.js":"3","/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/pages/home/home.js":"4","/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/routes.js":"5","/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/components/searchBar/searchBar.js":"6","/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/components/singlePhoto/singlePhoto.js":"7"},{"size":792,"mtime":1606816913136,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606783160501,"results":"10","hashOfConfig":"9"},{"size":161,"mtime":1606789931520,"results":"11","hashOfConfig":"9"},{"size":2326,"mtime":1606913354386,"results":"12","hashOfConfig":"9"},{"size":515,"mtime":1606839330703,"results":"13","hashOfConfig":"9"},{"size":1525,"mtime":1606911570546,"results":"14","hashOfConfig":"9"},{"size":1544,"mtime":1606909122185,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1tfy76e",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/index.js",[],["33","34"],"/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/reportWebVitals.js",[],"/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/App.js",[],"/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/pages/home/home.js",[],"/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/routes.js",[],"/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/components/searchBar/searchBar.js",["35"],"import React, {Component} from 'react';\nimport  Axios from 'axios';\nimport './searchBar.css';\nimport {BsSearch} from 'react-icons/bs';\nimport Skeleton from 'react-loading-skeleton';\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            search: '',\n            searchResult : [],\n            searchIsReady : false\n        }\n    }\n\n    onchange = (e) => {\n        this.setState({search:e.target.value})\n    }\n\n    handleSearch = (e) => {\n        e.preventDefault();\n        Axios.get(`/search/photos?query=${this.state.search}`)\n        .then((res) => {\n            if(res.status===200) {\n                this.setState({searchResult: res.data.results})\n                this.props.handleData(this.state.searchResult)\n                this.setState({searchIsReady: true})\n            }\n            })\n        .catch((err) => {\n            console.log(err)\n        })\n\n    }\n\n\n    render() {\n        return(\n            <div className=\"field-container\">\n                {this.state.searchIsReady? <p>{`Search result for ${this.state.search}` }</p> : ''}\n                <form onSubmit={this.handleSearch} className=\"field-wrapper\">\n                    <div className=\"search-icon-wrapper p-2\"> \n                      <BsSearch />\n                    </div>\n                    <input type=\"text\" className=\"searchBar\" placeholder=\"Search for photo\" onChange={this.onchange} />\n                </form>\n\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;\n\n","/home/kelechi/Desktop/allReactProjects/unsplash_clone/src/components/singlePhoto/singlePhoto.js",["36","37"],"import React, {Component} from 'react';\nimport  Axios from 'axios';\nimport './singlePhoto.css';\nimport Skeleton from 'react-loading-skeleton';\n\n\nclass SinglePhoto extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            singlePhoto: {}\n        }\n    }\n\n    componentDidMount() {\n        const { match: { params } } = this.props;\n        Axios.get(`/photos/${params.id}`)\n        .then((res) => {\n            this.setState({singlePhoto: {...res.data}})\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n    render() {\n        console.log('value of singleeee',this.state.singlePhoto)\n        const {urls, user}  = this.state.singlePhoto;\n        return(\n            <div className=\"single-photo-wrapper\">\n                <div className=\"photo-flex\">\n                {/* <span className=\"close\"></span> */}\n                <div className=\"single-photo-container py-4\">\n                    <div>\n                        <img src={urls && urls.raw} alt=\"single-photo\" className=\"main-photo\" />\n                        <div className=\"single-photo-text\">\n                            <h5 className=\"photo-text-name py-1\">{`${user && user.first_name} ${user && user.last_name}` }</h5>\n                            <p className=\"mb-0 photo-location\">{user && user.location}</p>\n                        </div>\n                        {/* center */}\n                    </div>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SinglePhoto;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":33,"column":25,"nodeType":"48","endLine":33,"endColumn":97},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Skeleton' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]